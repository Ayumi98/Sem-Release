{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _events = require('events');\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar styles = {\n  progressWrapper: {\n    height: '10px',\n    marginTop: '10px',\n    width: '400px',\n    float: 'left',\n    overflow: 'hidden',\n    backgroundColor: '#f5f5f5',\n    borderRadius: '4px',\n    WebkitBoxShadow: 'inset 0 1px 2px rgba(0,0,0,.1)',\n    boxShadow: 'inset 0 1px 2px rgba(0,0,0,.1)'\n  },\n  progressBar: {\n    float: 'left',\n    width: '0',\n    height: '100%',\n    fontSize: '12px',\n    lineHeight: '20px',\n    color: '#fff',\n    textAlign: 'center',\n    backgroundColor: '#337ab7',\n    WebkitBoxShadow: 'inset 0 -1px 0 rgba(0,0,0,.15)',\n    boxShadow: 'inset 0 -1px 0 rgba(0,0,0,.15)',\n    WebkitTransition: 'width .6s ease',\n    Otransition: 'width .6s ease',\n    transition: 'width .6s ease'\n  },\n  cancelButton: {\n    marginTop: '5px',\n    WebkitAppearance: 'none',\n    padding: 0,\n    cursor: 'pointer',\n    background: '0 0',\n    border: 0,\n    float: 'left',\n    fontSize: '21px',\n    fontWeight: 700,\n    lineHeight: 1,\n    color: '#000',\n    textShadow: '0 1px 0 #fff',\n    filter: 'alpha(opacity=20)',\n    opacity: '.2'\n  }\n};\n\nvar FileUploadProgress = function (_React$Component) {\n  _inherits(FileUploadProgress, _React$Component);\n\n  function FileUploadProgress(props) {\n    _classCallCheck(this, FileUploadProgress);\n\n    var _this = _possibleConstructorReturn(this, (FileUploadProgress.__proto__ || Object.getPrototypeOf(FileUploadProgress)).call(this, props));\n\n    _this.proxy = new _events.EventEmitter();\n    _this.state = {\n      progress: -1,\n      hasError: false\n    };\n    return _this;\n  }\n\n  _createClass(FileUploadProgress, [{\n    key: 'cancelUpload',\n    value: function cancelUpload() {\n      this.proxy.emit('abort');\n      this.setState({\n        progress: -1,\n        hasError: false\n      });\n    }\n  }, {\n    key: 'onSubmit',\n    value: function onSubmit(e) {\n      e.preventDefault();\n      this.setState({\n        progress: 0,\n        hasError: false\n      }, this._doUpload);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var formElement = this.props.formRenderer(this.onSubmit.bind(this));\n      var progessElement = this.props.progressRenderer(this.state.progress, this.state.hasError, this.cancelUpload.bind(this));\n      return _react2.default.createElement('div', null, formElement, progessElement);\n    }\n  }, {\n    key: '_getFormData',\n    value: function _getFormData() {\n      if (this.props.formGetter) {\n        return this.props.formGetter();\n      }\n\n      return new FormData(_reactDom2.default.findDOMNode(this.refs.form));\n    }\n  }, {\n    key: '_doUpload',\n    value: function _doUpload() {\n      var _this2 = this;\n\n      var form = this._getFormData();\n\n      var req = new XMLHttpRequest();\n      req.open('POST', this.props.url);\n      req.addEventListener('load', function (e) {\n        _this2.proxy.removeAllListeners(['abort']);\n\n        var newState = {\n          progress: 100\n        };\n\n        if (req.status >= 200 && req.status <= 299) {\n          _this2.setState(newState, function () {\n            _this2.props.onLoad(e, req);\n          });\n        } else {\n          newState.hasError = true;\n\n          _this2.setState(newState, function () {\n            _this2.props.onError(e, req);\n          });\n        }\n      }, false);\n      req.addEventListener('error', function (e) {\n        _this2.setState({\n          hasError: true\n        }, function () {\n          _this2.props.onError(e, req);\n        });\n      }, false);\n      req.upload.addEventListener('progress', function (e) {\n        var progress = 0;\n\n        if (e.total !== 0) {\n          progress = parseInt(e.loaded / e.total * 100, 10);\n        }\n\n        _this2.setState({\n          progress: progress\n        }, function () {\n          _this2.props.onProgress(e, req, progress);\n        });\n      }, false);\n      req.addEventListener('abort', function (e) {\n        _this2.setState({\n          progress: -1\n        }, function () {\n          _this2.props.onAbort(e, req);\n        });\n      }, false);\n      this.proxy.once('abort', function () {\n        req.abort();\n      });\n      this.props.beforeSend(req).send(this.props.formCustomizer(form));\n    }\n  }]);\n\n  return FileUploadProgress;\n}(_react2.default.Component);\n\nFileUploadProgress.propTypes = {\n  url: _propTypes2.default.string.isRequired,\n  formGetter: _propTypes2.default.func,\n  formRenderer: _propTypes2.default.func,\n  progressRenderer: _propTypes2.default.func,\n  formCustomizer: _propTypes2.default.func,\n  beforeSend: _propTypes2.default.func,\n  onProgress: _propTypes2.default.func,\n  onLoad: _propTypes2.default.func,\n  onError: _propTypes2.default.func,\n  onAbort: _propTypes2.default.func\n};\nFileUploadProgress.defaultProps = {\n  formRenderer: function formRenderer(onSubmit) {\n    return _react2.default.createElement('form', {\n      className: '_react_fileupload_form_content',\n      ref: 'form',\n      method: 'post',\n      onSubmit: onSubmit\n    }, _react2.default.createElement('div', null, _react2.default.createElement('input', {\n      type: 'file',\n      name: 'file'\n    })), _react2.default.createElement('input', {\n      type: 'submit'\n    }));\n  },\n  progressRenderer: function progressRenderer(progress, hasError, cancelHandler) {\n    if (hasError || progress > -1) {\n      var barStyle = (0, _objectAssign2.default)({}, styles.progressBar);\n      barStyle.width = progress + '%';\n\n      var message = _react2.default.createElement('span', null, 'Uploading ...');\n\n      if (hasError) {\n        barStyle.backgroundColor = '#d9534f';\n        message = _react2.default.createElement('span', {\n          style: {\n            color: '#a94442'\n          }\n        }, 'Failed to upload ...');\n      } else if (progress === 100) {\n        message = _react2.default.createElement('span', null, 'Successfully uploaded');\n      }\n\n      return _react2.default.createElement('div', {\n        className: '_react_fileupload_progress_content'\n      }, _react2.default.createElement('div', {\n        style: styles.progressWrapper\n      }, _react2.default.createElement('div', {\n        className: '_react_fileupload_progress_bar',\n        style: barStyle\n      })), _react2.default.createElement('button', {\n        className: '_react_fileupload_progress_cancel',\n        style: styles.cancelButton,\n        onClick: cancelHandler\n      }, _react2.default.createElement('span', null, '\\xD7')), _react2.default.createElement('div', {\n        style: {\n          clear: 'left'\n        }\n      }, message));\n    }\n\n    return '';\n  },\n  formCustomizer: function formCustomizer(form) {\n    return form;\n  },\n  beforeSend: function beforeSend(request) {\n    return request;\n  },\n  onProgress: function onProgress(e, request, progress) {},\n  onLoad: function onLoad(e, request) {},\n  onError: function onError(e, request) {},\n  onAbort: function onAbort(e, request) {}\n};\nexports.default = FileUploadProgress;","map":null,"metadata":{},"sourceType":"script"}